install.packages('magicMap')
r <- list()
r[0] = 1
r
r
r[1] = 2
r
r[2]  = 3
r
r[1]
r[1][1]
r <- vector()
r[1] = 1
r
r[2] = 2
r
[2]
r[2]
var <- vector()
var[1] =  0.2099958
var[2] =  0.0000000
b <-  vector()
b[1] <-  0.9220631
b[2] <-  0.5403720
b
var
length(var)
d <-  vector()
d[1] <- 0.9238794
d[2] <-
d[2] <- 0.5435260
d
p <- vector()
p
for(i in length(var)){
if (var[i]>0.05) {
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
p
var
for(i in length(var)){
if (var[i]>0.05) {
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
p
for(i in length(var)){
if (var[i]>0.05) {
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
for(i in length(var)){
if (var[i]>0.05) {
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
for(i in length(var)){
if (var[i]>0.05) {
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
print i
print(i)
i
else {p[i]<-d[i]}
for(i in length(var)){
print(i)
if(var[i]>0.05){
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
for(i in length(var)){
print(i)
if(var[i]>0.05){
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
for(i in length(var)){
print(i)
if(var[i]>0.05){
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
length(var)
for(i in seq(length(var))){
print(i)
if(var[i]>0.05){
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
p <- vector()
p
p
for(i in seq(length(var))){
print(i)
if(var[i]>0.05){
p[i]<-b[i]
}
else {p[i]<-d[i]}
}
p
R <- seq(0,20)
R
R + 1
## build a table contained information about the growth with cell division
options(digits=1)
N0 = 100
for r in R{print(r)}
for (r in R){print(r)}
N <- list()
N[0]  = 2
N
N <- vector()
N[0]  = 2
N
N[1]  = 2
N
N <- vector()
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c] <- R0^c * N0
}
R0 = 1.1
for (c in cycle){
N[c] <- R0^c * N0
}
N
data.frame(Cycle=cycle,N=N)
cycle
len(cycle)
length(cycle)
length(N)
print(c)
for (c in cycle){
print(c)
}
N <- vector()
for (c in cycle){
N[c] <- R0^c * N0
}
N
data.frame(Cycle=cycle,N=N)
data.frame(Cycle=cycle,Num=N)
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
data.frame(Cycle=cycle,Num=N)
df <- data.frame(Cycle=cycle,Num=N)
View(df)
df.T
df <- data.frame(Cycle=cycle,Num=N)
transform(df)
df.T
t(df)
data.frame(t(df))
1.1^20
2^2
2^3
1.1 ^ 15
## build a table contained information about the growth with cell division
options(digits=2)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
1.1 ^ 15
df <- data.frame(Cycle=cycle,Num=N)
## build a table contained information about the growth with cell division
options(digits=3)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
df <- data.frame(Cycle=cycle,Num=N)
df
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
df <- data.frame(Cycle=cycle,Num=N)
df
round(cycle,digits = 1)
round(cycle,digits = 2)
round(cycle,digits = 3)
round(cycle,digits = 4)
for (c in cycle){
print(R0^c )
}
print(R0^c * 100)
for (c in cycle){
print(R0^c * 100)
}
## build a table contained information about the growth with cell division
options(digits = 7)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
print(R0^c * 100)
}
## build a table contained information about the growth with cell division
options(digits = 10)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
print(R0^c * 100)
}
for (c in cycle){
print(R0^c )
}
## build a table contained information about the growth with cell division
options(digits = 10)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
## build a table contained information about the growth with cell division
options(nsmall=1)
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
print(R0^c )
}
for (c in cycle){
N[c+1] <- R0^c * N0
}
N
format(N,nsmall = 2)
format(N,nsmall = 2)
round(N)
round(N,digits = 2)
round(N,digits = 1)
## build a table contained information about the growth with cell division
N0 = 100
R0 = 1.1
cycle <- seq(0,20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N <- round(N,digits = 1)
cycle <- round(cycle,digits = 1)
df <- data.frame(Cycle=cycle,Num=N)
df
View(df)
function(cycle.start,cycle.end,R0,N0){
cycle <- seq(cycle.start,cycle.end)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N <- round(N,digits = 1)
cycle <- round(cycle,digits = 1)
df <- data.frame(Cycle=cycle,Num=N)
return(df)
}
make.table <- function(cycle.start,cycle.end,R0,N0){
cycle <- seq(cycle.start,cycle.end)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
N <- round(N,digits = 1)
cycle <- round(cycle,digits = 1)
df <- data.frame(Cycle=cycle,Num=N)
return(df)
}
make.table(0,20,1.1,100)
make.table(cycle.start,cycle.end,N0,R0)
make.table(cycle.start=cycle.start,cycle.end=cycle.en,N0=N0,R0=R0)
make.table(0,20,1.1,100)
cycle
round(cycle,digits = 2)
round(cycle,digits = 1)
seq(0,20.0)
seq(0,20.0)
seq(0,20.0)
seq(0,20.0)
seq(0,20.0)
seq(0,20.0)
as.numeric(cycle)
df_R1.1_N100 <- make.table(6,20,1.1,100)
as.numeric(cycle)
df_R1.0_N100 <- make.table(6,20,1.0,100)
cycle <- seq(6, 20)
N <- vector()
for (c in cycle){
N[c+1] <- R0^c * N0
}
for (c in cycle){
N[c+1] <- 1.1^c * 100
}
for (c in cycle){
N[c+1] <- 1.1^c * 100
}
setwd("~/Desktop/2020-work_report/005_BICB/2021-spring-course/csci5461/hws/hw2")
RNAseq <- read.delim("HiSeqV2",sep = '\t', header = TRUE)
RNAseq <- read.delim("HiSeqV2.txt",sep = '\t', header = TRUE)
microarray <- read.delim ("HT_HG-U133A.txt",sep = '\t', header = TRUE) #switch row and column? t(microarray)
clinical <- read.table('ov_tcga_clinical_data.tsv', sep = '\t', header = TRUE)
View(RNAseq)
View(RNAseq)
View(RNAseq)
View(clinical)
View(clinical)
RNAseq.T
head(RNAseq)
t(RNAseq)
head(t(RNAseq))
#Subset a small data
RNAseqsmall <- RNAseq[1:20,]
microarraysmall <- microarray[1:20,]
RNAseqsmall
t(RNAseqsmall)
RNAseqsmall.T = t(RNAseqsmall)
t(microarraysmall)
clinicalsmall.T = t(microarraysmall)
microarratsmall.T = t(microarraysmall)
View(clinicalsmall.T)
View(microarratsmall.T)
View(RNAseqsmall)
View(RNAseqsmall.T)
# Omit rows containing specific column (Overall.Survival..Months.,Overall.Survival.Status) of NA
clinicalsmall <- clinicalsmall[!is.na(clinicalsmall$Overall.Survival..Months.) &!is.na(clinicalsmall$Overall.Survival.Status) ,]
clinicalsmall <- clinical[1:100,]
# Omit rows containing specific column (Overall.Survival..Months.,Overall.Survival.Status) of NA
clinicalsmall <- clinicalsmall[!is.na(clinicalsmall$Overall.Survival..Months.) &!is.na(clinicalsmall$Overall.Survival.Status) ,]
#Group clinical data with relevant patients.
under36deceased <- (clinicalsmall$Overall.Survival..Months.<36) & (clinicalsmall$Overall.Survival.Status == "1:DECEASED") # 184
Group1 <- clinicalsmall[under36deceased,]
Group1$Group <- 1
over36 <- (clinicalsmall$Overall.Survival..Months. > 36) #275
Group2 <- clinicalsmall[over36,]
Group2$Group <- 2
clinicalsmall <- rbind(Group1,Group2)
#Transpose the row and column names
microarraysmall <- microarraysmall %>% gather(sampleID,value,-sample) %>% spread(sample, value)
data.table
library(data.table)
library(tidyverse)
#Transpose the row and column names
microarraysmall <- microarraysmall %>% gather(sampleID,value,-sample) %>% spread(sample, value)
View(microarraysmall)
#reformat Sample ID
labels <- microarraysmall$sampleID %>% str_replace_all(fixed("."),"-")
microarraysmall$sampleID <- c(labels)
View(microarraysmall)
View(clinicalsmall)
merge(microarraysmall,clinicalsmall,by.x = sampleID,by.y = Sample.ID)
merge(clinicalsmall, microarraysmall,,by.x = sampleID,by.y = Sample.ID)
merge(clinicalsmall, microarraysmall,by.x = sampleID,by.y = Sample.ID)
merge(clinicalsmall, microarraysmall,by.x = Sample.ID ,by.y = sampleID)
merge(clinicalsmall, microarraysmall,by.x = "Sample.ID" ,by.y = "sampleID")
clinical$Sample.ID
clinical[:,3]
clinical[,3]
clinical[,2:3]
clinical[,3:3]
clinical[,3:4]
View(clinicalsmall)
merge(clinicalsmall[3:4], microarraysmall,by.x = "Sample.ID" ,by.y = "sampleID")
a <- merge(clinicalsmall[3:4], microarraysmall,by.x = "Sample.ID" ,by.y = "sampleID")
b <- merge(clinicalsmall[3:4], microarraysmall,by.x = "Sample.ID" ,by.y = "sampleID", all.x = T)
View(b)
NewMicroarray <- merge(microarraysmall,clinicalsmall,by.x = "sampleID",by.y = "Sample.ID")
